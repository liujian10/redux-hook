{"version":3,"sources":["demo/reduces/index.ts","demo/reduces sync nonrecursive //.(js|ts|tsx)$","demo/reduces/counter.ts","demo/reduces/todos.ts","hooks/Provider.tsx","hooks/combineReducers.ts","hooks/useSelector.ts","hooks/useDispatch.ts","hooks/connect.tsx","demo/actions.ts","demo/components/Counter.tsx","demo/components/Todos.tsx","image/logo.svg","demo/index.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["context","require","keys","filter","item","reduce","res","key","nameSpace","match","reducer","initState","reducers","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","Object","resolve","module","exports","count","state","action","type","payload","text","initDispatch","StoreContext","createContext","DispatchContext","Provider","props","children","useReducer","dispatch","value","combineReducers","finalReducers","entries","k","v","finalReducersEntries","hasChange","nextState","forEach","handle","previousValue","nextValue","useSelector","useContext","funcs","funcsRef","useRef","resultFunc","useMemo","current","length","pop","Function","params","func","useDispatch","connect","args","Cmp","increment","counter","console","log","onClick","actions","todos","App","className","src","logo","alt","Counter","combinedReducer","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8754f37e.chunk.js","sourcesContent":["const context = require.context('./', false, /\\.(js|ts|tsx)$/)\nconst keys = context.keys().filter((item) => item !== './index.ts')\nconst [reducers, initState] = keys.reduce(\n  (res, key) => {\n    const nameSpace = key.match(/([^\\\\/]+).(ts)$/)[1]\n    res[0][nameSpace] = context(key).reducer\n    res[1][nameSpace] = context(key).initState\n    return res\n  },\n  [{}, {}]\n)\n\nexport { reducers, initState }\n","var map = {\n\t\"./counter.ts\": 18,\n\t\"./index.ts\": 6,\n\t\"./todos.ts\": 19\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 17;","import { IAction, IState } from '../../hooks'\n\ninterface ICounter extends IState {\n  count: number\n}\n\nconst initState = {\n  count: 0,\n}\n\nconst reducer = (state: ICounter, action: IAction) => {\n  switch (action.type) {\n    case 'CHANGE_COUNT':\n      return {\n        ...state,\n        count: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport { initState, reducer }\n","import { IAction, IState } from '../../hooks'\n\ninterface ITodos extends IState {\n  text: string\n}\n\nconst initState = {\n  text: 'old',\n}\n\nconst reducer = (state: ITodos, action: IAction) => {\n  switch (action.type) {\n    case 'CHANGE_TEXT':\n      return {\n        ...state,\n        text: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport { initState, reducer }\n","import { createContext, useReducer, Dispatch, ReactNode } from 'react'\nimport { IAction } from './types'\n\nconst initState: any = {}\nconst initDispatch: Dispatch<IAction> = () => {}\n\nexport const StoreContext = createContext(initState)\nexport const DispatchContext = createContext(initDispatch)\n\ninterface IProps {\n  children: ReactNode\n  reducer: any\n  initState: Object\n}\n\nconst Provider = (props: IProps) => {\n  const { children, reducer, initState } = props\n\n  const [state, dispatch] = useReducer(reducer, initState)\n  return (\n    <StoreContext.Provider value={state}>\n      <DispatchContext.Provider value={dispatch}>{children}</DispatchContext.Provider>\n    </StoreContext.Provider>\n  )\n}\n\nexport default Provider\n","import { IAction, IReducer } from './types'\n\nconst combineReducers = (reducers: Object) => {\n  // 把非function的reducer过滤掉\n  const finalReducers: IReducer = Object.entries(reducers).reduce((res, [k, v]) => {\n    if (typeof v === 'function') {\n      res[k] = v\n    }\n    return res\n  }, {})\n  const finalReducersEntries: Array<[key: string, handle: Function]> = Object.entries(finalReducers)\n  // 根据key调用每个reducer，将他们的值合并在一起\n  return (state: Object = {}, action: IAction) => {\n    let hasChange = false\n    const nextState = {}\n\n    finalReducersEntries.forEach(([key, handle]) => {\n      const previousValue = state[key]\n      const nextValue = handle(previousValue, action)\n      nextState[key] = nextValue\n      hasChange = hasChange || previousValue !== nextValue\n    })\n    return hasChange ? nextState : state\n  }\n}\n\nexport default combineReducers\n","import { useContext, useMemo, useRef } from 'react'\nimport { StoreContext } from './Provider'\n\nconst useSelector = (...funcs: Array<Function>) => {\n  const state = useContext(StoreContext)\n  const funcsRef = useRef(funcs)\n  const resultFunc: Function = useMemo(() => {\n    if (funcsRef.current.length > 1) {\n      return funcsRef.current.pop() || Function\n    }\n    return (...v: Array<any>) => v[0]\n  }, [])\n  const params = useMemo(() => funcsRef.current.map((func) => func(state)), [state])\n\n  return useMemo(() => resultFunc(...params), [resultFunc, params])\n}\n\nexport default useSelector\n","import { useContext } from 'react'\nimport { DispatchContext } from './Provider'\n\nconst useDispatch = () => useContext(DispatchContext)\n\nexport default useDispatch\n","import { useMemo } from 'react'\nimport useSelector from './useSelector'\nimport useDispatch from './useDispatch'\n\nconst connect = (...args: Array<Function>) => (Cmp) => (props: Object) => {\n  const state = useSelector(...args)\n  const dispatch = useDispatch()\n  return useMemo(() => <Cmp {...props} {...state} dispatch={dispatch} />, [props, state, dispatch])\n}\n\nexport default connect\n","export const increment = (count: number) => ({\n  type: 'CHANGE_COUNT',\n  payload: count + 1,\n})\n\nexport const decrement = (count: number) => ({\n  type: 'CHANGE_COUNT',\n  payload: count - 1,\n})\n\nexport const changeText = (text: string) => ({\n  type: 'CHANGE_TEXT',\n  payload: text,\n})\n","import { Dispatch } from 'react'\nimport { connect, IAction, IState } from '../../hooks'\nimport * as actions from '../actions'\n\ninterface IProps {\n  count: number\n  dispatch: Dispatch<IAction>\n}\n\nconst App = (props: IProps) => {\n  const { count, dispatch } = props\n  console.log('counter', count)\n\n  const increment = (val: number) => dispatch(actions.increment(val))\n  const decrement = (val: number) => dispatch(actions.decrement(val))\n\n  return (\n    <div>\n      <h1>The count is {count}</h1>\n      <button onClick={() => increment(count)}>increment</button>\n      <button onClick={() => decrement(count)}>decrement</button>\n    </div>\n  )\n}\n\nexport default connect((state: IState) => state.counter)(App)\n","import { Dispatch } from 'react'\nimport { connect, IAction, IState } from '../../hooks'\nimport * as actions from '../actions'\n\ninterface IProps {\n  todos: {\n    text: string\n  }\n  counter: {\n    count: number\n  }\n  dispatch: Dispatch<IAction>\n}\n\nconst Todos = (props: IProps) => {\n  const { todos, counter, dispatch } = props\n  const change = (val: string) => dispatch(actions.changeText(val))\n  const increment = () => dispatch(actions.increment(counter.count))\n  console.log('todos', todos)\n\n  return (\n    <div>\n      <h1>The text is {todos.text}</h1>\n      <button onClick={() => change('new')}>change</button>\n      <button onClick={increment}>increment</button>\n    </div>\n  )\n}\n\nexport default connect(\n  (state: IState) => state.counter,\n  (state: IState) => state.todos,\n  (counter: IState, todos: IState) => ({ counter, todos })\n)(Todos)\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import Counter from './components/Counter'\nimport Todos from './components/Todos'\n\nimport logo from '../image/logo.svg'\n\nimport './index.css'\n\nconst App = () => (\n  <div className=\"App\">\n    <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <div>redux hook</div>\n    </header>\n    <div className=\"App-card\">\n      <Counter />\n      <Todos />\n    </div>\n  </div>\n)\n\nexport default App\n","import Demo from './demo/index'\nimport { Provider, combineReducers } from './hooks'\nimport { reducers, initState } from './demo/reduces'\n\nconst App = () => {\n  const combinedReducer = combineReducers(reducers)\n  return (\n    <Provider reducer={combinedReducer} initState={initState}>\n      <Demo />\n    </Provider>\n  )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}